#tag Window
Begin Window winInventoryPickerold
   BackColor       =   &cFFFFFF00
   Backdrop        =   0
   CloseButton     =   True
   Compatibility   =   ""
   Composite       =   False
   Frame           =   2
   FullScreen      =   False
   FullScreenButton=   False
   HasBackColor    =   False
   Height          =   448
   ImplicitInstance=   False
   LiveResize      =   True
   MacProcID       =   0
   MaxHeight       =   32000
   MaximizeButton  =   True
   MaxWidth        =   32000
   MenuBar         =   0
   MenuBarVisible  =   True
   MinHeight       =   64
   MinimizeButton  =   True
   MinWidth        =   64
   Placement       =   0
   Resizeable      =   True
   Title           =   ""
   Visible         =   True
   Width           =   433
   Begin entListbox lbItems
      AcceptFocus     =   False
      AcceptTabs      =   True
      AutoDeactivate  =   True
      BackColor       =   &cFFFF00FF
      Backdrop        =   0
      CellBackColor   =   &cFFFF00FF
      Enabled         =   True
      EraseBackground =   True
      GridLinesColor  =   &c00000000
      HasBackColor    =   False
      HasHeading      =   True
      Height          =   395
      HelpTag         =   ""
      InitialParent   =   ""
      Left            =   0
      LockBottom      =   True
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   True
      LockTop         =   True
      Scope           =   0
      TabIndex        =   0
      TabPanelIndex   =   0
      TabStop         =   True
      Top             =   22
      Transparent     =   True
      UseFocusRing    =   False
      Visible         =   True
      Width           =   433
   End
   Begin PopupMenu pmFilter
      AutoDeactivate  =   True
      Bold            =   False
      DataField       =   ""
      DataSource      =   ""
      Enabled         =   True
      Height          =   22
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      InitialValue    =   ""
      Italic          =   False
      Left            =   157
      ListIndex       =   0
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Scope           =   0
      TabIndex        =   2
      TabPanelIndex   =   0
      TabStop         =   True
      TextFont        =   "System"
      TextSize        =   0.0
      TextUnit        =   0
      Top             =   0
      Underline       =   False
      Visible         =   True
      Width           =   148
   End
   Begin SearchControl scInventorySearch
      AutoDeactivate  =   True
      Enabled         =   True
      HasCancelButton =   True
      HasMenu         =   False
      Height          =   22
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Left            =   0
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      MacBorderStyle  =   0
      PlaceHolderText =   ""
      Scope           =   0
      SendSearchStringImmediately=   False
      SendWholeSearchString=   False
      TabIndex        =   3
      TabPanelIndex   =   0
      TabStop         =   True
      Text            =   ""
      Top             =   0
      Visible         =   True
      Width           =   157
   End
   Begin OkCancelContainer contOkCancel
      AcceptFocus     =   False
      AcceptTabs      =   True
      AutoDeactivate  =   True
      BackColor       =   &cFFFFFF00
      Backdrop        =   0
      CancelButtonText=   "Cancel"
      Enabled         =   True
      EraseBackground =   True
      HasBackColor    =   False
      Height          =   30
      HelpTag         =   ""
      InitialParent   =   ""
      Left            =   253
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      OkButtonText    =   "Ok"
      Scope           =   0
      TabIndex        =   4
      TabPanelIndex   =   0
      TabStop         =   True
      Top             =   418
      Transparent     =   True
      UseFocusRing    =   False
      Visible         =   True
      Width           =   176
   End
End
#tag EndWindow

#tag WindowCode
	#tag Event
		Sub Open()
		  dim s1,s2() as string
		  
		  
		  // Set the listbox field names
		  s1 = "item_name,item_category"
		  s2() = s1.Split(",")
		  sFieldNames() = s2()
		  
		  // Set the listbox headers
		  s1 = "Name,Category"
		  s2() = s1.Split(",")
		  lbItems.Heading = s2()
		  
		  // Set the options in the listbox Filter
		  pmFilter.AddRow("All")
		  pmFilter.AddRow("Physical Items")
		  pmFilter.AddRow("Serialized Items")
		  
		End Sub
	#tag EndEvent


	#tag Method, Flags = &h0
		Sub BuildRowTag(ByRef oRowTag as lbRowTag)
		  // Pull the record object out of the rowtag
		  dim oRecord as DataFile.tbl_inventory
		  If oRowTag.vtblRecord IsA DataFile.tbl_inventory Then
		    oRecord = oRowTag.vtblRecord
		  Else
		    
		    
		  End If
		  
		  // Extract the table record
		  dim oItem as DataFile.tbl_inventory
		  oItem = oRowTag.vtblRecord
		  
		  // extract hte pkid into the rowtag
		  oRowTag.pkid = oRecord.ipkid
		  
		  // Create column values 
		  For Each sField as String In sFieldNames
		    
		    // Get the values out of the Inventory Record
		    dim jsItemFieldValues as JSONItem
		    jsItemFieldValues = oRecord.GetMyFieldValues(True)
		    
		    // Get the key names Of Inventory record
		    dim sItemKeys() as string
		    sItemKeys = jsItemFieldValues.Names
		    
		    dim sTable as string
		    dim n1 as integer
		    dim sRawValue as String
		    n1 = InStr(sField,".-.")
		    If n1 <> 0 Then
		      sTable = Left(sField,n1 - 1)
		      sField = Mid(sField,n1 + 3)
		    End If
		    
		    // Check which table it is apart of
		    Select Case sTable
		    Case ""
		      If sItemKeys.IndexOf(sField) <> -1 Then
		        sRawValue = jsItemFieldValues.Value(sField)
		      End If
		    End Select
		    
		    // Format the value
		    dim sFormattedValue as String
		    If sField.InStr("_cost") <> 0 Then
		      sFormattedValue = ConvertCentsString_To_DollarString(sRawValue)
		    Else 
		      sFormattedValue = sRawValue
		    End If
		    
		    oRowTag.vColumnValues.Append(sFormattedValue)
		  Next
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub HandleExpandRow(row as integer)
		  
		  
		  // Extract the rowtag
		  dim oRowTag as lbRowTag
		  oRowTag = lbItems.RowTag(row)
		  
		  // Loop through its children
		  For Each oRow as lbRowTag In oRowTag.aroChildren
		    
		    lbItems.AddRow("")
		    LoadRow(lbItems.LastIndex,oRow)
		    
		  Next
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub LoadItems(sConditionpar as string = "", sGroupBy as string = "item_department")
		  
		  // Deleteing all listbox rows
		  lbItems.DeleteAllRows
		  
		  // Get the Inventory in grouped form from the database
		  dim oGroupedItems as Dictionary
		  dim sCondition,sOrder as string
		  
		  ' Set the conditions based on the filter
		  Select Case pmFilter.Text
		  Case ""
		    sCondition = sConditionpar
		  Case "Physical Items"
		    sCondition = "physical_item = 'true' And " + sConditionpar
		  Case "Serialized Items"
		    sCondition = "hide = 'true' And " + sConditionpar
		  Else
		    sCondition = ""
		  End Select
		  
		  ' Set the order, grouped field going first
		  sOrder = sGroupBy + ",item_name"
		  
		  ' do the data grabbing
		  oGroupedItems = DataFile.tbl_inventory.ListGrouped(sCondition,sOrder)
		  
		  // Loop through each group
		  For Each vKey as Variant In oGroupedItems.Keys
		    
		    // Turn the group name into a string
		    dim sGroupName as string
		    sGroupName = str(vKey)
		    
		    // Start creation of group rowtag
		    dim oGroupRowTag as New lbRowTag
		    oGroupRowTag.isFolder = True
		    oGroupRowTag.iFolderLevel = 0
		    oGroupRowTag.vColumnValues.Append(sGroupName)
		    
		    // Extract members of the group into an array
		    dim oCurrentGroup() as DataFile.tbl_inventory
		    oCurrentGroup = oGroupedItems.Value(vKey)
		    
		    // Loop through each memeber of the group
		    For Each oItem as DataFile.tbl_inventory In oCurrentGroup
		      
		      // Create the Rowtag
		      dim oRowTag as New lbRowTag
		      oRowTag.isFolder = False
		      oRowTag.vtblRecord = oItem
		      oRowTag.iFolderLevel = 1
		      
		      BuildRowTag(oRowTag)
		      
		      // Add it to the list of children
		      oGroupRowTag.aroChildren.Append(oRowTag)
		      
		    Next
		    
		    // Add a new row for the group
		    lbItems.AddRow("")
		    LoadRow(lbItems.LastIndex,oGroupRowTag)
		    
		  Next
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub LoadRow(RowIndex as integer, oRowTag as lbRowTag)
		  
		  
		  
		  
		  dim i1 as integer 
		  For Each vValue as Variant In oRowTag.vColumnValues
		    
		    lbItems.Cell(RowIndex,i1) = vValue
		    
		    i1 = i1 + 1
		  Next
		  
		  lbItems.RowTag(RowIndex) = oRowTag
		  
		  // Make it a folder if neccessary
		  If oRowTag.isFolder Then
		    lbItems.RowisFolder(RowIndex) = True
		  End If
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub SelectItem()
		  
		  
		  If lbItems.ListIndex <> -1 Then
		    
		    // Extract the rowtag
		    dim oRowTag as lbRowTag
		    oRowTag = lbItems.RowTag(lbItems.ListIndex)
		    
		    If oRowTag.vtblRecord <> Nil Then
		      
		      If oRowTag.pkid <> 0 Then
		        iSelectedItemPKID = oRowTag.pkid
		        me.Close
		      Else
		        
		        If oRowTag.vtblRecord IsA DataFile.tbl_inventory then
		          dim oRecord as DataFile.tbl_inventory
		          oRecord = oRowTag.vtblRecord
		          
		          If oRecord.ipkid <> 0 Then
		            iSelectedItemPKID = oRecord.ipkid
		            me.Close
		          End If
		        Else
		          
		        End If
		        
		      End If
		      
		    Else
		      
		      
		    End If
		    
		  Else
		    
		    
		  End If
		End Sub
	#tag EndMethod


	#tag Property, Flags = &h0
		iSelectedItemPKID As Int64
	#tag EndProperty

	#tag Property, Flags = &h0
		sFieldNames() As String
	#tag EndProperty


#tag EndWindowCode

#tag Events lbItems
	#tag Event
		Sub ExpandRow(Row as integer)
		  
		  HandleExpandRow(Row)
		End Sub
	#tag EndEvent
	#tag Event
		Sub DoubleClick()
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events pmFilter
	#tag Event
		Sub Change()
		  
		  
		  LoadItems
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events contOkCancel
	#tag Event
		Sub CancelAction()
		  
		  iSelectedItemPKID = 0 
		  me.Window.Close
		End Sub
	#tag EndEvent
	#tag Event
		Sub Action()
		  
		  SelectItem
		End Sub
	#tag EndEvent
#tag EndEvents
#tag ViewBehavior
	#tag ViewProperty
		Name="BackColor"
		Visible=true
		Group="Background"
		InitialValue="&hFFFFFF"
		Type="Color"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Backdrop"
		Visible=true
		Group="Background"
		Type="Picture"
		EditorType="Picture"
	#tag EndViewProperty
	#tag ViewProperty
		Name="CloseButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Composite"
		Group="OS X (Carbon)"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Frame"
		Visible=true
		Group="Frame"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Document"
			"1 - Movable Modal"
			"2 - Modal Dialog"
			"3 - Floating Window"
			"4 - Plain Box"
			"5 - Shadowed Box"
			"6 - Rounded Window"
			"7 - Global Floating Window"
			"8 - Sheet Window"
			"9 - Metal Window"
			"11 - Modeless Dialog"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreen"
		Group="Behavior"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreenButton"
		Visible=true
		Group="Frame"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HasBackColor"
		Visible=true
		Group="Background"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Height"
		Visible=true
		Group="Size"
		InitialValue="400"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="ImplicitInstance"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Interfaces"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="iSelectedItemPKID"
		Group="Behavior"
		Type="Int64"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LiveResize"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MacProcID"
		Group="OS X (Carbon)"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxHeight"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaximizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxWidth"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBar"
		Visible=true
		Group="Menus"
		Type="MenuBar"
		EditorType="MenuBar"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBarVisible"
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinHeight"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinimizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinWidth"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Placement"
		Visible=true
		Group="Behavior"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Default"
			"1 - Parent Window"
			"2 - Main Screen"
			"3 - Parent Window Screen"
			"4 - Stagger"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Resizeable"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Title"
		Visible=true
		Group="Frame"
		InitialValue="Untitled"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Visible"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Width"
		Visible=true
		Group="Size"
		InitialValue="600"
		Type="Integer"
	#tag EndViewProperty
#tag EndViewBehavior
